{"version":3,"sources":["app.js","game-deck.js","game-functions.js","insta-api.js","page-manager.js","register-pages.js","routes.js","shuffle-cards.js","timer.js","init.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA","file":"app.js","sourcesContent":["var app = {\n  router: Rlite()\n};\n","$(function() {\n\n  // Generates a random deck of cards\n  app.gameDeck = function (numPairs) {\n    // take the cards, split them into an array and shuffle\n    var cards = app.shuffle('123456789abcdefg'.split(''));\n\n    // choose how many cards we want\n    cards = cards.slice(0, numPairs);\n\n    // double the array to create pairs\n    cards = cards.concat(cards);\n\n    // shuffle and return\n    return app.shuffle(cards);\n  };\n\n\n});\n","// Function to handle main game actions\napp.memoryGame = function() {\n  $('.game-checkbox').on('change', function(e) {\n    // When you click on a tile (:checked)\n    var tile = $(this);\n    var lives = $('.game-icons p');\n    var count = lives.text().length;\n\n    tile.attr('disabled', true);\n\n    if (!app.previous) {\n    //  register the checked tile\n      app.previous = tile;\n      return;\n    }\n\n    // When you click on a second tile\n    var prevChar = app.previous.next().children('.game-icon').text();\n    var thisChar = tile.next().children('.game-icon').text();\n    // compare the value to the first tile\n    if (prevChar === thisChar) {\n      // if matches\n        // add a class to the tile that lets us know they match\n      tile.addClass('matched');\n      app.previous.addClass('matched');\n          // and disables the tiles\n      $('.matched').prop('disabled', true);\n        // enable remaining tiles\n      app.previous = undefined;\n\n\n      // see if we win and show screen if we do\n      if(lives === $('.game-checkbox').length) {\n        var win = {\n          time: app.time + 's',\n          result: 'You Win!!',\n          score: count,\n          class: 'game-win'\n        };\n        app.manager.goTo('result', win);\n      }\n\n    } else {\n    // if doesn't match\n      // timeout(turn the tiles back over)\n      decrement();\n      if(count <= 1) {\n        var lose = {\n          time: app.time + 's',\n          result: 'You Lose!!',\n          score: 0,\n          class: 'game-win'\n        };\n        app.manager.goTo('result', lose);\n\n        return;\n      }\n      // decrement the count and see if we lose\n      window.setTimeout(flipOver, 1000);\n    }\n    function flipOver() {\n      tile.prop('checked', false);\n      tile.attr('disabled', false);\n      app.previous.prop('checked', false);\n      app.previous.attr('disabled', false);\n      app.previous = undefined;\n    }\n    function decrement() {\n      var current = lives.text().slice(0, count - 1);\n      lives.text( current );\n    }\n  });\n\n};\n","app.InstaApi = function(apiKey) {\n\n  var baseUrl = 'https://api.instagram.com/v1/';\n  if(!spec.apiKey) {\n    throw console.log('you must enter an api');\n  }\n  var user;\n\n\n  var self = {\n    listings: function() {\n\n    },\n    user: function(userName) {\n      var url = baseUrl + 'users/search?access_token=' + spec.apiKey + 'q=' + userID;\n      var promise = $.Deferred();\n\n      var req = $.getJSON(url).done(function(data){\n        if(!data.ok) {\n          promise.reject(req, 'Unknown Error', data);\n        } else {\n\n          promise.resolve(data);\n          var user = data;\n        }\n      });\n      return promise;\n    }\n\n  };\n\n\n  return self;\n\n};\n","app.PageManager = function () {\n  app.views = {};\n\n  var self = {\n    registerPage: function (name, callback) {\n\n      // Where do we store the templates??\n      app.views[name] = callback;\n\n    },\n\n    goTo: function(name, data) {\n\n      $('main').html(app.views[name](data));\n\n    }\n  };\n\n  return self;\n};\n","$(function() {\n\n  app.manager = app.PageManager();\n\n  app.manager.registerPage('newgame', function() {\n    $.get('views/newgame.html').done(function (html) {\n      var template = _.template(html, { variable: 'm' });\n      $('main').html(template());\n      $('main').attr('class', 'main-container');\n    }).fail(function(obj, text, err) {\n      console.log(err + ' ' + text);\n    });\n  });\n\n  app.manager.registerPage('gametiles', function(deck) {\n    $.get('views/gametiles.html').done(function(html){\n      console.log(html);\n      var template = _.template(html, { variable: 'm' });\n      var gametiles = template({deck: deck});\n      $('.game-board').html(gametiles);\n    }).fail(function(obj, text, err) {\n      console.log('could not find gametiles');\n    });\n  });\n\n\n  app.manager.registerPage('easygame', function() {\n    $.get('views/gameboard.html').done(function(html){\n      var template = _.template(html, { variable: 'm' });\n      // generate deck of cards & pass into template\n      var deck = {\n        tiles: app.gameDeck('9'),\n        level: 'easy-tile'\n      };\n      $('main').html(template());\n      $('main').attr('class', 'game-container');\n      app.views.gametiles(deck);\n      app.timer();\n    }).fail(function(obj, text, err) {\n      console.log('could not find gameboard');\n    });\n  });\n\n  app.manager.registerPage('hardgame', function() {\n    $.get('views/gameboard.html').done(function(html){\n      var template = _.template(html, { variable: 'm' });\n      // generate deck of cards & pass into template\n      var deck = {\n        tiles: app.gameDeck('16'),\n        level: 'hard-tile'\n      };\n      $('main').html(template());\n      $('main').attr('class', 'game-container');\n      app.views.gametiles(deck);\n      app.timer();\n    }).fail(function(obj, text, err) {\n      console.log('could not find gameboard');\n    });\n  });\n\n  app.manager.registerPage('result', function(result) {\n    $.get('views/game-over.html').done(function(html){\n       var gameover = _.template(html, { variable: 'm' });\n       // generate deck of cards & pass into template\n       $('main').append(gameover({item:result}));\n      //  $('main').attr('class', 'game-container');\n    }).fail(function(obj, text, err) {\n      console.log('could not find results page');\n    });\n  });\n\n});\n","$(function () {\n\n  app.router.add('', function() {\n    app.manager.goTo('newgame', {});\n  });\n\n  app.router.add('game/easy', function() {\n    app.manager.goTo('easygame');\n    window.setTimeout(app.memoryGame, 500);\n  });\n\n  app.router.add('game/hard', function() {\n    app.manager.goTo('hardgame');\n    window.setTimeout(app.memoryGame, 500);\n  });\n\n  app.router.add('game/result', function() {\n    app.manager.goTo('result');\n  });\n\n  app.processHash = function() {\n    var hash = location.hash || '#';\n\n    if (!app.router.run(hash.slice(1))) {\n      show404Page();\n    }\n  };\n\n  window.addEventListener('hashchange', app.processHash);\n\n  app.processHash();\n\n});\n","app.shuffle = function(arr) {\n\n  function swap(array, x, y) {\n    var tmp = array[x];\n    array[x] = array[y];\n    array[y] = tmp;\n    return array;\n  }\n\n  for (var i =0; i < arr.length; ++i) {\n    var randomIndex = Math.floor(Math.random() * arr.length);\n    arr = swap(arr, i, randomIndex);\n  }\n\n  return arr;\n\n};\n","app.timer = function() {\n  app.time = 0;\n  var seconds = 0;\n\n  function showInt() {\n    ++app.time;\n    var minutes = Math.floor(app.time/60);\n    ++seconds;\n\n    if (minutes > 59) {\n      window.location = '#game/lose';\n    }\n    if (seconds > 59) {\n      seconds = 0;\n    }\n\n    if (seconds > 9) {\n      $('.time-counter p').text(minutes + ':' + seconds);\n    } else {\n      $('.time-counter p').text(minutes + ':0' + seconds);\n    }\n  }\n  var timerInt = window.setInterval(showInt, 1000);\n  window.addEventListener('hashchange', function() {\n\n    clearInterval(timerInt);\n    app.time=0;\n  });\n};\n",""],"sourceRoot":"/source/"}