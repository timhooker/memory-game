{"version":3,"sources":["app.js","game-deck.js","game-functions.js","insta-api.js","page-manager.js","register-pages.js","routes.js","shuffle-cards.js","timer.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var app = {\n  router: Rlite()\n};\n","$(function() {\n\n  // Generates a random deck of cards\n  app.gameDeck = function (numPairs) {\n    // take the cards, split them into an array and shuffle\n    var cards = app.shuffle('123456789abcdefg'.split(''));\n\n    // choose how many cards we want\n    cards = cards.slice(0, numPairs);\n\n    // double the array to create pairs\n    cards = cards.concat(cards);\n\n    // shuffle and return\n    return app.shuffle(cards);\n  };\n\n\n});\n","// Function to handle main game actions\napp.memoryGame = function() {\n  $('.game-checkbox').on('change', function(e) {\n    // When you click on a tile (:checked)\n    var tile = $(this);\n    var lives = $('.game-icons p');\n    var count = lives.text().length;\n\n    tile.attr('disabled', true);\n\n    if (!app.previous) {\n    //  register the checked tile\n      app.previous = tile;\n      return;\n    }\n\n    // When you click on a second tile\n    var prevChar = app.previous.next().children('.game-icon').text();\n    var thisChar = tile.next().children('.game-icon').text();\n    // compare the value to the first tile\n    if (prevChar === thisChar) {\n      // if matches\n        // add a class to the tile that lets us know they match\n      tile.addClass('matched');\n      app.previous.addClass('matched');\n          // and disables the tiles\n      $('.matched').prop('disabled', true);\n        // enable remaining tiles\n      app.previous = undefined;\n\n\n      // see if we win and show screen if we do\n      if(lives === $('.game-checkbox').length) {\n        var result = {\n          time: app.timer + 's',\n          result: 'You Win!!',\n          score: count,\n          class: 'game-win'\n        };\n        app.manager.goTo('result', result);\n      }\n\n    } else {\n    // if doesn't match\n      // timeout(turn the tiles back over)\n      decrement();\n      if(count <= 1) {\n        var result = {\n          time: app.timer + 's',\n          result: 'You Lose!!',\n          score: 0,\n          class: 'game-win'\n        };\n        app.manager.goTo('result', result);\n\n        return;\n      }\n      // decrement the count and see if we lose\n      window.setTimeout(flipOver, 1000);\n    }\n    function flipOver() {\n      tile.prop('checked', false);\n      tile.attr('disabled', false);\n      app.previous.prop('checked', false);\n      app.previous.attr('disabled', false);\n      app.previous = undefined;\n    }\n    function decrement() {\n      var current = lives.text().slice(0, count - 1);\n      lives.text( current );\n    }\n  });\n\n};\n","app.InstaApi = function(apiKey) {\n\n  var baseUrl = 'https://api.instagram.com/v1/';\n  if(!spec.apiKey) {\n    throw console.log('you must enter an api');\n  }\n  var user;\n\n\n  var self = {\n    listings: function() {\n\n    },\n    user: function(userName) {\n      var url = baseUrl + 'users/search?access_token=' + spec.apiKey + 'q=' + userID;\n      var promise = $.Deferred();\n\n      var req = $.getJSON(url).done(function(data){\n        if(!data.ok) {\n          promise.reject(req, 'Unknown Error', data);\n        } else {\n\n          promise.resolve(data);\n          var user = data;\n        }\n      });\n      return promise;\n    }\n\n  };\n\n\n  return self;\n\n};\n","app.PageManager = function () {\n  app.views = {};\n\n  $.get('views/gametiles.html').done(function(html){\n    app.views.gametiles = _.template(html, { variable: 'm' });\n  }).fail(function(obj, text, err) {\n    console.log(err);\n  });\n\n\n\n  var self = {\n    registerPage: function (name, callback) {\n\n      // Where do we store the templates??\n      app.views[name] = callback;\n\n    },\n\n    goTo: function(name, data) {\n\n      $('main').html(app.views[name](data));\n\n    }\n  };\n\n  return self;\n};\n","$(function() {\n\n  app.manager = app.PageManager();\n\n  app.manager.registerPage('newgame', function() {\n    $.get('views/newgame.html').done(function (html) {\n      var template = _.template(html, { variable: 'm' });\n      $('main').html(template());\n      $('main').attr('class', 'main-container');\n    }).fail(function(obj, text, err) {\n      console.log(err + ' ' + text);\n    });\n  });\n\n  app.manager.registerPage('easygame', function() {\n    $.get('views/gameboard.html').done(function(html){\n      var gameboard = html;\n      // generate deck of cards & pass into template\n      var deck = app.gameDeck('9');\n      var gametile = app.views.gametiles({deck: deck, level: 'easy-tile'});\n      $('main').html(gameboard);\n      $('main').attr('class', 'game-container');\n      $('main').append(gametile);\n      app.timer();\n    }).fail(function(obj, text, err) {\n      console.log('could not find gameboard');\n    });\n  });\n\n  app.manager.registerPage('hardgame', function() {\n    $.get('views/gameboard.html').done(function(html){\n      var gameboard = html;\n      // generate deck of cards & pass into template\n      var deck = app.gameDeck('16');\n      var gametile = app.views.gametiles({deck: deck, level: 'hard-tile'});\n      $('main').html(gameboard);\n      $('main').attr('class', 'game-container');\n      $('main').append(gametile);\n    }).fail(function(obj, text, err) {\n      console.log('could not find gameboard');\n    });\n  });\n  app.manager.registerPage('result', function(result) {\n    $.get('views/game-over.html').done(function(html){\n       var gameover = _.template(html, { variable: 'm' });\n       // generate deck of cards & pass into template\n       $('main').append(gameover({item:result}));\n      //  $('main').attr('class', 'game-container');\n    }).fail(function(obj, text, err) {\n      console.log('could not find gameboard');\n    });\n  });\n\n});\n","$(function () {\n\n  app.router.add('', function() {\n    app.manager.goTo('newgame', {});\n  });\n\n  app.router.add('game/easy', function() {\n    app.manager.goTo('easygame');\n    window.setTimeout(app.memoryGame, 500);\n  });\n\n  app.router.add('game/hard', function() {\n    app.manager.goTo('hardgame');\n    window.setTimeout(app.memoryGame, 500);\n  });\n\n  app.router.add('game/result', function() {\n    app.manager.goTo('result');\n  });\n\n  app.processHash = function() {\n    var hash = location.hash || '#';\n\n    if (!app.router.run(hash.slice(1))) {\n      show404Page();\n    }\n  };\n\n  window.addEventListener('hashchange', app.processHash);\n\n  app.processHash();\n\n});\n","app.shuffle = function(arr) {\n\n  function swap(array, x, y) {\n    var tmp = array[x];\n    array[x] = array[y];\n    array[y] = tmp;\n    return array;\n  }\n\n  for (var i =0; i < arr.length; ++i) {\n    var randomIndex = Math.floor(Math.random() * arr.length);\n    arr = swap(arr, i, randomIndex);\n  }\n\n  return arr;\n\n};\n","app.timer = function() {\n  app.timer = 0;\n  var seconds = 0;\n\n  function showInt() {\n    ++app.timer;\n    var minutes = Math.floor(app.timer/60);\n    ++seconds;\n\n    if (minutes > 59) {\n      window.location = '#game/lose';\n    }\n    if (seconds > 59) {\n      seconds = 0;\n    }\n\n    if (seconds > 9) {\n      $('.time-counter p').text(minutes + ':' + seconds);\n    } else {\n      $('.time-counter p').text(minutes + ':0' + seconds);\n    }\n  }\n  var timerInt = window.setInterval(showInt, 1000);\n  window.addEventListener('hashchange', function() {\n\n    clearInterval(timerInt);\n    app.timer=0;\n  });\n};\n"],"sourceRoot":"/source/"}